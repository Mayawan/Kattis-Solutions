using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _201iq
{
    class Program
    {
        static void Main(string[] args)
        {
            string tempInput = Console.ReadLine();
            tempInput = tempInput.Trim(' ');
            tempInput = tempInput.TrimEnd('\r', '\n');
            string[] input1 = tempInput.Split(' ');
            int airports = int.Parse(input1[0]);
            int days = int.Parse(input1[1]);
            int numFlights = int.Parse(input1[2]);

            Console.WriteLine("flights");
            List<List<int>> flightInfo = new List<List<int>>();
            for (int i = 0; i < numFlights; i++)
            {
                tempInput = Console.ReadLine();
                string[] input2 = tempInput.Split(' ');
                List<int> thisFlight = new List<int>();
                for (int j = 0; j < input2.Length; j++)
                {
                    thisFlight.Add(int.Parse(input2[j]));
                }
                flightInfo.Add(thisFlight);
            }

            int kn = airports * days;
            Console.WriteLine("arrivals");
            List<List<int>> arrivals = new List<List<int>>();
            for (int i = 0; i < kn; i++)
            {
                tempInput = Console.ReadLine();
                string[] input3 = tempInput.Split(' ');
                List<int> thisArrival = new List<int>();
                for (int j = 0; j < input3.Length; j++)
                {
                    thisArrival.Add(int.Parse(input3[j]));
                }
                arrivals.Add(thisArrival);
            }

            bool isOptimal = true;
            int[] peopleInAirport = new int[airports];
            for(int i = 0; i < days; i++)
            {
                Console.WriteLine("day" + (i + 1));
                //get index of all arrivals
                List<int> indexOfArrivals = new List<int>();
                for(int j = 0; j < arrivals.Count; j++)
                {
                    if (arrivals[j][1] == i + 1) indexOfArrivals.Add(j);
                }
                //get arrivals for all peopleInAirport.Length airports at day i
                for(int j = 0; j < indexOfArrivals.Count; j++)
                {
                    peopleInAirport[arrivals[indexOfArrivals[j]][0] - 1] += arrivals[indexOfArrivals[j]][2];
                    Console.WriteLine(arrivals[indexOfArrivals[j]][2] + " people arrive to airport" + (arrivals[indexOfArrivals[j]][0]));
                }

                int[] peopleATT = peopleInAirport;

                //gets index of flights on day i
                List<int> indexOfFlights = new List<int>();
                for(int j = 0; j < flightInfo.Count; j++)
                {
                    if (flightInfo[j][2] == i + 1) indexOfFlights.Add(j);
                }

                for(int j = 0; j < indexOfFlights.Count; j++)
                {
                    int startingLocation = flightInfo[indexOfFlights[j]][0] - 1;
                    int destination = flightInfo[indexOfFlights[j]][1] - 1;
                    int capacity = flightInfo[indexOfFlights[j]][3];

                    Console.WriteLine("Flight " + (indexOfFlights[j] + 1));
                    displayArray(peopleInAirport, "airport");
                    Console.WriteLine("capacity: " + capacity);
                    Console.WriteLine("start: " + (startingLocation + 1));
                    Console.WriteLine("end: " + (destination + 1));

                    if (capacity > peopleATT[startingLocation])
                    {
                        isOptimal = false;
                        break;
                    }
                    //sends people to destination
                    peopleInAirport[startingLocation] -= capacity;
                    peopleInAirport[destination] += capacity;
                    displayArray(peopleInAirport, "airport after flight");
                }
            }
            if (isOptimal)
            {
                Console.WriteLine("optimal");
            }
            else
            {
                Console.WriteLine("suboptimal");
            }
            Console.Read();
        }

        static void displayArray(int[] array, string name)
        {
            for(int i = 0; i < array.Length; i++)
            {
                Console.WriteLine(name + (i + 1) + ":" + array[i]);
            }
        }
    }
}
